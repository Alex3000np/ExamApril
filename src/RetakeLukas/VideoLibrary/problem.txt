VideoLibrary
You are going to create a Video Library where the guests can borrow videos
available in the database.

*****Video
The video has
title, director, release year and price
(these are the basic data that must be set when the video is created)
the number of guests who have ever borrowed the video
and also if the video is borrowed currently.

There are two types of video:
GrayScale: costs USD$3.99
Colored: costs USD$6.99

It should have a toString() method which returns information about the video itself:
For example: Titanic by James Cameron from 1997 - borrowed 1 times.

It should have a copy() method:
The GrayScale video shall throw an error/exception with the message: The Police will find you soon
The Colored video shall return a clone of itself (a new object with the same basic data)

*****Guest
Every guest should have a name and an address and may have a video.
The guest is able to borrow exactly one Video at one time.
It has a toString() method which gives information about the currently booked video.
For example: Jon Doe is currently borrowing the Titanic.
For example: Jon Doe is not borrowing anything currently.
It has a steal() method which creates and returns a copy of the borrowed video (if any).
If there is no video borrowed, it shall print: There is no video available to steal.

VideoStore
It has a list of registeredGuests and a list of videos
It has an addGuest() method where a guest is added to the store,
pass the data about guest as an argument, do not have a static guest inside this method.
We should be able to add any guest we want.
It has an addVideo() method where a video is added to the store,
pass the data about video as an argument, do not have a static video inside this method.
We should be able to add any videos we want.
It has a borrow() method where you can borrow videos by a guest.
It takes two parameters: guest and video
It throws error/exception with descriptive message if the following happens:
the guest already has a video borrowed
the video is currently not available
Otherwise
sets the video status to "borrowed"
assigns the video to the guest
It has a returnVideo() method where you can return the video back to the store.
It takes one parameter: guest
It increases the videos borrowing number if the guest has a video
It changes the video status to "not borrowed"
It takes the video away from the guest
It has a getMostOftenBorrowed() method which returns the most often borrowed video.

It has a toString() method which gives information about the available videos and the registered guests.

For example: The store has 0 videos available right now and 1 guests registered.
For example: The store has 1 videos available right now and 1 guests registered.